name: Barracuda Webhook Reporter

on:
  schedule:
    - cron: '0 */2 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  report-malicious-ips:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: Bad-Ip

    steps:
      - name: Checkout code (toutes branches)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install requests

      - name: Run barracuda script
        env:
          BLOCKLIST_URL: ${{ secrets.BLOCKLIST_URL }}
          WEBHOOK_URL_IP: ${{ secrets.WEBHOOK_URL_IP }}
        run: python barracuda.py

      - name: Push seen_ips.log to logs branch
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"

          # Remonter à la racine du repo
          cd $GITHUB_WORKSPACE

          # Copier temporairement le log généré par le script
          cp Bad-Ip/logs/seen_ips.log /tmp/seen_ips.log

          # Récupérer ou créer la branche logs
          git fetch origin logs || true
          git checkout logs || git checkout -b logs

          # S’assurer que le dossier cible existe
          mkdir -p Bad-Ip/logs

          # Remettre à jour le fichier dans la branche logs
          cp /tmp/seen_ips.log Bad-Ip/logs/seen_ips.log

          # Commit et push du seul fichier seen_ips.log
          git add Bad-Ip/logs/seen_ips.log
          git commit -m "Mise à jour des IPs $(date -u +'%Y-%m-%dT%H:%M:%SZ')" || echo "Rien à committer"
          git push origin logs

          # Retour sur main pour la propreté
          git checkout main
